@model ZdtbSite.Web.Areas.ZdtbAdmin.Models.ProductViewModel
@section PageHeader{
    产品模块 > 添加产品
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    List<SelectListItem> list = new List<SelectListItem>();
    list.Add(new SelectListItem()
    {
        Selected = true,
        Text = "请选择产品类型",
        Value = "0"
    });
    foreach (var item in ViewBag.DropDownListResult as Dictionary<string, string>)
    {
        list.Add(new SelectListItem()
        {
            Selected = false,
            Text = item.Value,
            Value = item.Key
        });
    }
}

<div class="fluid-container">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-md-12">
                <!-- new widget -->
                <div class="jarviswidget" id="widget-id-0" role="widget">
                    <header>
                        <h2>产品信息</h2>
                    </header>
                    <div>

                        <div class="inner-spacer">
                            <!-- content goes here -->
                            <form class="form-horizontal themed" method="post" name="form1" action="@Url.Action("Add")" enctype="multipart/form-data">
                                <fieldset>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-3">@Html.LabelFor(m => m.Name)</div>
                                            <div class="col-md-9">
                                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", autofocus = "" })
                                                @Html.ValidationMessageFor(m => m.Name)
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-3">
                                                @Html.LabelFor(m => m.ProductTypeId)
                                            </div>
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(m => m.ProductTypeId, list, new { @class = "with-search" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-3">@Html.LabelFor(m => m.Description)</div>
                                            <div class="col-md-9">
                                                @Html.TextAreaFor(m => m.Description, new { @class = "textarea uniform", autofocus = "", @style = "width:100%;height: 100px;", @placeholder = "Enter text ..." })
                                            </div>
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <input type="file" id="fileElem" name="fileElem"  onchange="handleFiles(this)" />
                                            </div>
                                            <div class="col-md-9">
                                                <div id="fileList" style="height:250px;">
                                                    <div></div>
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="form-group">
                                        <div class="row" style="text-align:right">
                                            <div class="col-md-12">
                                                <button type="reset" name="name" class="btn btn-danger">
                                                    <i class="icon-repeat icon-white"></i> 重置
                                                </button>

                                                <button type="submit" name="name" class="btn btn-primary">
                                                    <i class="icon-ok-sign icon-white"></i> 保存
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </form>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section script{
    <script type="text/javascript">
        window.URL = window.URL || window.webkitURL;
        var fileElem = document.getElementById("fileElem"),
            fileList = document.getElementById("fileList");
        function handleFiles(obj) {
            var files = obj.files,
                img = new Image();
            //if (fileElem.children) fileList.removeChild(fileList.children);
            if (window.URL) {
                //File API
                //alert(files[0].name + "," + files[0].size + " bytes");
                img.src = window.URL.createObjectURL(files[0]); //创建一个object URL，并不是你的本地路径
                img.height = 250;
                img.onload = function (e) {
                    window.URL.revokeObjectURL(this.src); //图片加载后，释放object URL
                }
                fileList.replaceChild(img, fileList.firstElementChild);
            } else if (window.FileReader) {
                //opera不支持createObjectURL/revokeObjectURL方法。我们用FileReader对象来处理
                var reader = new FileReader();
                reader.readAsDataURL(files[0]);
                reader.onload = function (e) {
                    //alert(files[0].name + "," + e.total + " bytes");
                    img.src = this.result;
                    img.width = 200;
                    fileList.replaceChild(img, fileList.firstElementChild);
                }
            } else {
                //ie
                obj.select();
                obj.blur();
                var nfile = document.selection.createRange().text;
                document.selection.empty();
                img.src = nfile;
                img.width = 200;
                img.onload = function () {
                    alert(nfile + "," + img.fileSize + " bytes");
                }
                fileList.replaceChild(img, fileList.firstElementChild);
                //fileList.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod='image',src='"+nfile+"')";
            }
        }
    </script>
}